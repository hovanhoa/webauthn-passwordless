import * as server from './server'
import { AuthenticationJSON } from './types';

test('Test RS256 signatures', async () => {
    const res = await server.verifySignature({
        algorithm: 'RS256',
        publicKey: "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzXUir6UgELFeM9il6id2vgZ1sWbZTk4C5JLIiMpg7lywwTRdp0i+lPP9rEdzcmwKwRLh5QT8DlPFQuKrUc8eXb9r+RPq/CvVOxVCqdK6A9fg0PDnvA3k7c5Ax5V5n/HcSw/uXVAzwstxQsbV5pOk0JDtys7rKiPjdO+XH5TbANNJE7PsS5j90zHLKNQaSybgF8V0v4Oz4I9u7IjVQKEz2V56E4Qfj/D7g0PCu63M5mNz5bGsmUzg5XwSRIaG3J3kDTuyTTGjPYhTnYFyWYXuMu1ZQ7JCe5FUv9m4oj3jH33VQEW3sorea7UOBjnSsLWp8MyE08M4tlY2xgyFL59obQIDAQAB",
        authenticatorData: "SZYN5YgOjGh0NBcPZHZgW4/krrmihjLHmVzzuoMdl2MFAAAAAQ==",
        clientData: "eyJ0eXBlIjoid2ViYXV0aG4uZ2V0IiwiY2hhbGxlbmdlIjoiWmpreE5URTBZVGN0TkRKa015MDBOMlU0TFdFME1HTXRZVFEyTkdRNVlqTmpNVGN3Iiwib3JpZ2luIjoiaHR0cDovL2xvY2FsaG9zdDo2MzM0MiIsImNyb3NzT3JpZ2luIjpmYWxzZSwib3RoZXJfa2V5c19jYW5fYmVfYWRkZWRfaGVyZSI6ImRvIG5vdCBjb21wYXJlIGNsaWVudERhdGFKU09OIGFnYWluc3QgYSB0ZW1wbGF0ZS4gU2VlIGh0dHBzOi8vZ29vLmdsL3lhYlBleCJ9",
        signature: "E/XchoqDlSOanozr0o03DN++EEz5qVymtgiaLbepoysxgdxAz/uH/34wt7/YrUs7ESaH/3ni3/0mk71WRc9SP9GMRNYqKSeZkwAM+ZHMc7e3OEpOETWIBCO+aOKmKPflB/nVzXocNUHnhW/aw5UAOhU43qjjy1X9+5+t+60C6RyGaDXTz6Mk6rmgX3z21M8pOFw8VAAtUojX6ab+Lh48SaMN1Z2BK8Exh//pFjveMVngx4yuYRm6Tu7irRvGZVe7Wnii6GNUz56kT2Q4Fc8hR28c3+qufKWuaHLJUnsw6GILQNxemDzirlKBhXFjz7Ht7tyGaqUwFZr9q+93j/95Ag=="
    })
    expect(res).toBe(true)
});



test('Test ES256 signatures', async () => {
    const res = await server.verifySignature({
        algorithm: 'ES256',
        publicKey: "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEWyyMt1l16_1rzDP63Ayw9EFpn1VbSt4NSJ7BOsDzqed5Z3aTfQSvzPBPHb4uYQuuckOKRbdoH9S0fEnSvNxpRg==",
        authenticatorData: "SZYN5YgOjGh0NBcPZHZgW4_krrmihjLHmVzzuoMdl2MFAAAAAQ==",
        clientData: "eyJ0eXBlIjoid2ViYXV0aG4uZ2V0IiwiY2hhbGxlbmdlIjoiMjRkMjI0ZDMtMWQwZi00MzAxLTg3NTktMzk4ODcwNTg1ZTU1Iiwib3JpZ2luIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwIiwiY3Jvc3NPcmlnaW4iOmZhbHNlfQ==",
        signature: "MEYCIQDgSy1brw1UVCT4kzaZIiiihNuC7KvV2vm3gO5f1CSscQIhAM6-MihKO2jnF_BHeEJMYZ7jN-kz9TuWqYwJJzm4fOcl"
    })
    expect(res).toBe(true)
});



test('Test README registration example', async () => {
    const registration = {
        "username": "Arnaud",
        "credential": {
          "id": "3924HhJdJMy_svnUowT8eoXrOOO6NLP8SK85q2RPxdU",
          "publicKey": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEgyYqQmUAmDn9J7dR5xl-HlyAA0R2XV5sgQRnSGXbLt_xCrEdD1IVvvkyTmRD16y9p3C2O4PTZ0OF_ZYD2JgTVA==",
          "algorithm": "ES256"
        },
        "authenticatorData": "SZYN5YgOjGh0NBcPZHZgW4_krrmihjLHmVzzuoMdl2NFAAAAAAiYcFjK3EuBtuEw3lDcvpYAIN_duB4SXSTMv7L51KME_HqF6zjjujSz_EivOatkT8XVpQECAyYgASFYIIMmKkJlAJg5_Se3UecZfh5cgANEdl1ebIEEZ0hl2y7fIlgg8QqxHQ9SFb75Mk5kQ9esvadwtjuD02dDhf2WA9iYE1Q=",
        "clientData": "eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoiYTdjNjFlZjktZGMyMy00ODA2LWI0ODYtMjQyODkzOGE1NDdlIiwib3JpZ2luIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwIiwiY3Jvc3NPcmlnaW4iOmZhbHNlfQ=="
      } as const

    const expected = {
        challenge: "a7c61ef9-dc23-4806-b486-2428938a547e", // whatever was randomly generated by the server
        origin: "http://localhost:8080",
    }
    const registrationParsed = await server.verifyRegistration(registration, expected)

    expect(registrationParsed).toMatchObject({
        "username": "Arnaud",
        "credential": {
          "id": "3924HhJdJMy_svnUowT8eoXrOOO6NLP8SK85q2RPxdU",
          "publicKey": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEgyYqQmUAmDn9J7dR5xl-HlyAA0R2XV5sgQRnSGXbLt_xCrEdD1IVvvkyTmRD16y9p3C2O4PTZ0OF_ZYD2JgTVA==",
          "algorithm": "ES256",
        },
        "authenticator": {
          "counter": 0,
          "aaguid": "08987058-cadc-4b81-b6e1-30de50dcbe96",
          "icon_dark": "https://webauthn.passwordless.id/authenticators/08987058-cadc-4b81-b6e1-30de50dcbe96-dark.png",
          "icon_light": "https://webauthn.passwordless.id/authenticators/08987058-cadc-4b81-b6e1-30de50dcbe96-light.png",
          "name": "Windows Hello",
        },
        "synced": false
      })
});



test('Test README authentication example', async () => {
    const authentication :AuthenticationJSON = {
        "type": "public-key",
        "id": "3924HhJdJMy_svnUowT8eoXrOOO6NLP8SK85q2RPxdU",
        "rawId": "3924HhJdJMy_svnUowT8eoXrOOO6NLP8SK85q2RPxdU",
        "response": {
          "authenticatorData": "SZYN5YgOjGh0NBcPZHZgW4_krrmihjLHmVzzuoMdl2MFAAAAAQ==",
          "clientDataJSON": "eyJ0eXBlIjoid2ViYXV0aG4uZ2V0IiwiY2hhbGxlbmdlIjoiNTY1MzViMTMtNWQ5My00MTk0LWEyODItZjIzNGMxYzI0NTAwIiwib3JpZ2luIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwIiwiY3Jvc3NPcmlnaW4iOmZhbHNlLCJvdGhlcl9rZXlzX2Nhbl9iZV9hZGRlZF9oZXJlIjoiZG8gbm90IGNvbXBhcmUgY2xpZW50RGF0YUpTT04gYWdhaW5zdCBhIHRlbXBsYXRlLiBTZWUgaHR0cHM6Ly9nb28uZ2wveWFiUGV4In0=",
          "signature": "MEUCIAqtFVRrn7q9HvJCAsOhE3oKJ-Hb4ISfjABu4lH70MKSAiEA666slmop_oCbmNZdc-QemTv2Rq4g_D7UvIhWT_vVp8M="
        }
      }


    const credentialKey = { // obtained from database by looking up `authentication.credentialId`
        id: "3924HhJdJMy_svnUowT8eoXrOOO6NLP8SK85q2RPxdU",
        publicKey: "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEgyYqQmUAmDn9J7dR5xl-HlyAA0R2XV5sgQRnSGXbLt_xCrEdD1IVvvkyTmRD16y9p3C2O4PTZ0OF_ZYD2JgTVA==",
        algorithm: "ES256"
    } as const
    
    const expected = {
        challenge: "56535b13-5d93-4194-a282-f234c1c24500", // whatever was randomly generated by the server
        origin: "http://localhost:8080",
        userVerified: true, // should be set if `userVerification` was set to `required` in the authentication options (default)
        counter: 0 // for enhanced security, you can store the number of times this authenticator was used and ensure it increases each time
    }

    const authenticationParsed = await server.verifyAuthentication(authentication, credentialKey, expected)

    console.log(authenticationParsed)

    expect(authenticationParsed).toMatchObject({
        "credentialId": "3924HhJdJMy_svnUowT8eoXrOOO6NLP8SK85q2RPxdU",
        "client": {
          "type": "webauthn.get",
          "challenge": "56535b13-5d93-4194-a282-f234c1c24500",
          "origin": "http://localhost:8080",
          "crossOrigin": false,
          "other_keys_can_be_added_here": "do not compare clientDataJSON against a template. See https://goo.gl/yabPex"
        },
        "authenticator": {
          "rpIdHash": "SZYN5YgOjGh0NBcPZHZgW4_krrmihjLHmVzzuoMdl2M=",
          "flags": {
            "userPresent": true,
            "userVerified": true,
            "backupEligibility": false,
            "backupState": false,
            "attestedData": false,
            "extensionsIncluded": false
          },
          "counter": 1
        },
        "signature": "MEUCIAqtFVRrn7q9HvJCAsOhE3oKJ-Hb4ISfjABu4lH70MKSAiEA666slmop_oCbmNZdc-QemTv2Rq4g_D7UvIhWT_vVp8M="
      })
});




test('Test README authentication example with async functions', async () => {
  const authentication = {
      "credentialId": "3924HhJdJMy_svnUowT8eoXrOOO6NLP8SK85q2RPxdU",
      "authenticatorData": "SZYN5YgOjGh0NBcPZHZgW4_krrmihjLHmVzzuoMdl2MFAAAAAQ==",
      "clientData": "eyJ0eXBlIjoid2ViYXV0aG4uZ2V0IiwiY2hhbGxlbmdlIjoiNTY1MzViMTMtNWQ5My00MTk0LWEyODItZjIzNGMxYzI0NTAwIiwib3JpZ2luIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwIiwiY3Jvc3NPcmlnaW4iOmZhbHNlLCJvdGhlcl9rZXlzX2Nhbl9iZV9hZGRlZF9oZXJlIjoiZG8gbm90IGNvbXBhcmUgY2xpZW50RGF0YUpTT04gYWdhaW5zdCBhIHRlbXBsYXRlLiBTZWUgaHR0cHM6Ly9nb28uZ2wveWFiUGV4In0=",
      "signature": "MEUCIAqtFVRrn7q9HvJCAsOhE3oKJ-Hb4ISfjABu4lH70MKSAiEA666slmop_oCbmNZdc-QemTv2Rq4g_D7UvIhWT_vVp8M="
    }

  const credentialKey = { // obtained from database by looking up `authentication.credentialId`
      id: "3924HhJdJMy_svnUowT8eoXrOOO6NLP8SK85q2RPxdU",
      publicKey: "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEgyYqQmUAmDn9J7dR5xl-HlyAA0R2XV5sgQRnSGXbLt_xCrEdD1IVvvkyTmRD16y9p3C2O4PTZ0OF_ZYD2JgTVA==",
      algorithm: "ES256"
  } as const
  
  const expected = {
      challenge: async (challenge:string) => {return true}, // whatever was randomly generated by the server
      origin: async (origin:string) => {return ["http://localhost:8080"].includes(origin)},
      userVerified: true, // should be set if `userVerification` was set to `required` in the authentication options (default)
      counter: 0 // for enhanced security, you can store the number of times this authenticator was used and ensure it increases each time
  }

  const authenticationParsed = await server.verifyAuthentication(authentication, credentialKey, expected)

  console.log(authenticationParsed)

  expect(authenticationParsed).toMatchObject({
      "credentialId": "3924HhJdJMy_svnUowT8eoXrOOO6NLP8SK85q2RPxdU",
      "client": {
        "type": "webauthn.get",
        "challenge": "56535b13-5d93-4194-a282-f234c1c24500",
        "origin": "http://localhost:8080",
        "crossOrigin": false,
        "other_keys_can_be_added_here": "do not compare clientDataJSON against a template. See https://goo.gl/yabPex"
      },
      "authenticator": {
        "rpIdHash": "SZYN5YgOjGh0NBcPZHZgW4_krrmihjLHmVzzuoMdl2M=",
        "flags": {
          "userPresent": true,
          "userVerified": true,
          "backupEligibility": false,
          "backupState": false,
          "attestedData": false,
          "extensionsIncluded": false
        },
        "counter": 1
      },
      "signature": "MEUCIAqtFVRrn7q9HvJCAsOhE3oKJ-Hb4ISfjABu4lH70MKSAiEA666slmop_oCbmNZdc-QemTv2Rq4g_D7UvIhWT_vVp8M="
    })
});


/*
{
  "type": "public-key",
  "id": "TmXHzFZuxziTRnrXrfu0SgXs3n8nvnxtNDnAHaaXjsI",
  "rawId": "TmXHzFZuxziTRnrXrfu0SgXs3n8nvnxtNDnAHaaXjsI=",
  "authenticatorAttachment": "platform",
  "clientExtensionResults": {},
  "response": {
    "attestationObject": "o2NmbXRjdHBtZ2F0dFN0bXSmY2FsZzn__mNzaWdZAQDDV1g2d9iJP5mE0ZrlfxfckiC4pilnEDFEt6M2pn3zDo3mzEr8AsHYr_-rCdPcH5JBrMQcIR9ZuZk4eO-SKTuxM_ASuhjzuTfX1PaGnz0eVHn6uJ3pzoRDiKxRMUQKIBzrYofhn-hfV6C6X7zSN2CYxm3eFjCPb8em2CN6o0nfASLG732RsdxhLQVz44P9nIgsqJxoE2DBU4X1F8ymYTtWzr3BOel4uco_R4hhVxWfcc4SrcmpWTnziiwjoAcuJHlcQEABpAXQSD72fezI3G0JeiaUXQ9Lsyh0JZKhjorGGX3BZbd1Oq0usSWF5j9WMr4Fw9JlKsSHFRIQDPkYIK-lY3ZlcmMyLjBjeDVjglkFxDCCBcAwggOooAMCAQICEFq6V0H4j04wlciZFuaZ9vcwDQYJKoZIhvcNAQELBQAwQTE_MD0GA1UEAxM2RVVTLVNUTS1LRVlJRC1GQjE3RDcwRDczNDg3MEU5MTlDNEU4RTYwMzk3NUU2NjRFMEU0M0RFMB4XDTI0MDcyODA5NDgwOFoXDTI3MDYwMzE5NDAyNFowADCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPLyklwa7pu3W4ojV3caZIh3nmXOWqZjFQZrtweB0ihUdNyN0Fd-oi6eGuX4-GdUSIsUdg_giww4Q7-7zrWQgAMfy7UBs0949XOU53OqLwGkC8zmrTKSZkyKKiQp8Xubngi_CNlgMhDlBYwtawVLfGNWbgWhZ5GQi3ufCFUaPPEiTeJHbuMWCRqc80GwwiCC5QtToSKAo5udawlJ0WUHrIe0_qDShKwvZ1xqqOvMB09vcZ3NYwfE6x9cx26m-aN_KMSKw5DWF6tPmYBRrHYsDN60Gxp0_NheOr5cxUAKinyIDb0srBYzMGKDWvdZJL9BRG1fnEUz5twbDZ0umcNVrCUCAwEAAaOCAfMwggHvMA4GA1UdDwEB_wQEAwIHgDAMBgNVHRMBAf8EAjAAMG0GA1UdIAEB_wRjMGEwXwYJKwYBBAGCNxUfMFIwUAYIKwYBBQUHAgIwRB5CAFQAQwBQAEEAIAAgAFQAcgB1AHMAdABlAGQAIAAgAFAAbABhAHQAZgBvAHIAbQAgACAASQBkAGUAbgB0AGkAdAB5MBAGA1UdJQQJMAcGBWeBBQgDMFkGA1UdEQEB_wRPME2kSzBJMRYwFAYFZ4EFAgEMC2lkOjUzNTQ0RDIwMRcwFQYFZ4EFAgIMDFNUMzNIVFBIQUhEODEWMBQGBWeBBQIDDAtpZDowMDAxMDEwMjAfBgNVHSMEGDAWgBQ4pJZObjM-jRpJDnX8A7aFbZT8iDAdBgNVHQ4EFgQU4WUz1L_jirzxsWmHsSrAUCPDw94wgbIGCCsGAQUFBwEBBIGlMIGiMIGfBggrBgEFBQcwAoaBkmh0dHA6Ly9hemNzcHJvZGV1c2Fpa3B1Ymxpc2guYmxvYi5jb3JlLndpbmRvd3MubmV0L2V1cy1zdG0ta2V5aWQtZmIxN2Q3MGQ3MzQ4NzBlOTE5YzRlOGU2MDM5NzVlNjY0ZTBlNDNkZS84ZTJjZjI5NS1kMjIzLTQ5NmEtOTdlYy0yNTc2OTVjNmMyZmMuY2VyMA0GCSqGSIb3DQEBCwUAA4ICAQBAulhu6Q76ghQt5xm7LhjrbvSdxNjTUvRBKCz6g18pKkRkVVk0pA2PQjhEf-qRm3013hPTnB28ODaiQANJKjA7GN6BBeEfBl0Eav8Yx568NbpLIsBwsueb0P4eTe8hvVOuwgxLMnuq6IW9MGaUlY0-_Naq2q5EpqcU9Dp1TCZG_v56LKTH7YSvcpAzRSHew_vQdFllWUPEpdlk1g-nWrt5zwN6Vz9ZFfYEoId3rUpaLU9pE-D5eAZP1XPlbkcmpzaxRXN70Oej-YWQljP9IAVaGvrIeAMG1b06K6_LsRw2gaxJYfvJcOEPe01sjb-XDic_U44-ID2WC6ibmaZRJ9qgTiVXyAc-Njbn-dPYMVseXabeislgQtcBuzUjynGGYbEBWEiVVxXUQx5nbp4mjiW90JJ_ONmrnfuD-8Wy9JcKlDflanS47ep2cnsNy9lIA-Q5vzvvuEta0nrN9R000X-B-mClgavTHF4HwqiOS64wi5VKve8j_a-TMDhm-WpthhNq65kLsWCtJxIhtZrh2_jMH6tQPMAJuMX-TXaPATpS3hwhFyJFv-h7iD_Xzx59gqfVeVJFRSlr6ug0ILOiIptUQuPba2NeguCDA0EYnQnEh6OxN8jckt9G-CveWccBw1w8vkLe-Yp4tIgF-2bM2BF_cdSC9DpWtFEk4_NBeHzLbFkG7zCCBuswggTToAMCAQICEzMAAAUtM4db5_ICoa8AAAAABS0wDQYJKoZIhvcNAQELBQAwgYwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xNjA0BgNVBAMTLU1pY3Jvc29mdCBUUE0gUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgMjAxNDAeFw0yMTA2MDMxOTQwMjRaFw0yNzA2MDMxOTQwMjRaMEExPzA9BgNVBAMTNkVVUy1TVE0tS0VZSUQtRkIxN0Q3MEQ3MzQ4NzBFOTE5QzRFOEU2MDM5NzVFNjY0RTBFNDNERTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAKvu5BtXmmeYhA9MHXP9BXKRWLoSn352DZWpcmSxtASbp2evJt5EiGuyHX637koanGphUUmKk26USKD19nyamCCQy6Wh4_U01DICR3gcaR7nsKE-_uL3ratdR0xwpx_lO6WZw6bvuqsDSVFebZeOYBk310utv4kiMtDYC91-0_JdjSGQtaYvNZJz7NfhNxtOvmLsNl9gjZOQOsF45SjNcRh_0S62qF4g4dM7q1_HuFlWLlDwNzAjn07nE2gNHjJ2zCxCZkh0PoLakKJZZRe1O0CfyQP9cCoPKk7nGfMpKn8wy-RisMzaBopjl7NiyManoUT51qsFzbPNN3vUnqNeRPl9u_PteYMM7Agx73MVX5_76qA49mqrnP_XNpHUD_B6k9Ti2vtV5rnYNFtedbxDwEqdNcMNk068jBhecuFdPdKdatwWDz7oczxt5YyJTGMSuDPRZGHtAgl6Y5lHsFSaozpz_QmlRmlSni5MYyy0Kol7qrcLjgzAr-wG1QHTlRRAyeaUAU0Op1c9yPVYSpwzmOsyI3swQKIZIAhHj8MVBUDsvBotf7GULUKJppfw5B43khwpNZVoUT6wKyYXSKekxPTsxdz7azBCPXWt9qJO4ZIzLzhOFq8eyXySFk92zuTb2gmwWXNLXsjMOm6hqk3sPm9DL_Rn9aSAi7SKJem4ibgNAgMBAAGjggGOMIIBijAOBgNVHQ8BAf8EBAMCAoQwGwYDVR0lBBQwEgYJKwYBBAGCNxUkBgVngQUIAzAWBgNVHSAEDzANMAsGCSsGAQQBgjcVHzASBgNVHRMBAf8ECDAGAQH_AgEAMB0GA1UdDgQWBBQ4pJZObjM-jRpJDnX8A7aFbZT8iDAfBgNVHSMEGDAWgBR6jArOL0hiF-KU0a5VwVLscXSkVjBwBgNVHR8EaTBnMGWgY6Bhhl9odHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2NybC9NaWNyb3NvZnQlMjBUUE0lMjBSb290JTIwQ2VydGlmaWNhdGUlMjBBdXRob3JpdHklMjAyMDE0LmNybDB9BggrBgEFBQcBAQRxMG8wbQYIKwYBBQUHMAKGYWh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvY2VydHMvTWljcm9zb2Z0JTIwVFBNJTIwUm9vdCUyMENlcnRpZmljYXRlJTIwQXV0aG9yaXR5JTIwMjAxNC5jcnQwDQYJKoZIhvcNAQELBQADggIBABjK2-9pxH4S-6fyCAKHHgROS5UvqzLkSZNd0F-3bPJ9q1-kAdUmk0-F6lXpJcGTXG2tcX0VpOoxHYeuugPTYE2YsmVSd4l-_sKPdDKPs5ZoJBYemEUsYjp0I2NUrSjQqSM7OTLUe_wdSEUaD1QIfQ1QmSSoGg8WqR23yswykOrkRomLRJqIQrI4Iyd1pSMhRVkizM_6asjyy_xCi3J29BnNAZFFUnH0fcfR9R6t2MSxo84aYvV8n0cdyFyM_L654kdUZcyqn4R0lfnemOxej4e9_pQLyP0qY1mfJ4TRiCTJ-eG7VmC5tdH9Ol5QhiVsqWYBX6rF8hd7RSLDBr4HF8ve1IF1Nsg0qRtfPjAiax8q6TE_rpe0YMROHRcanBufX7U16idX_l_y6aOyvnezoCqEK1IM8YAE8_GF7RQJN6xNXB171vVudlet-3gIoSp_flCgtIo81V6wRl-CKtaNTNGX0frRaDp-E7I3ullpJqhK5KtQE7AKGUeh8nc9LAKVW0FAnlrs96eDHbB_F53EBFc-UtbYtSpXzx10RvqtctsWOtl5w5dEn6Pl1FugG-KZ_fMWrDAk54WqyojOethgS1SbZb1dwzEixAZeUn7hjPqmI0IE0JJ13HJLPYLgpjWjf29n6NQ4rG7n134zNw1WjKseyCaUnN8AJ8aKDKwGBqTzZ3B1YkFyZWFZATYAAQALAAYEcgAgnf_L82w4OuaZ-5ho3G3LidcVOIS-KAOSLBJBWL-tIq4AEAAQCAAAAAAAAQDpkr15dJKXs3cmR4gxbvTdPuUG0F4Juw0o6AP2BDO_Xvn-2RJNH0S1TTd6huYJLtWfhkeUk_SPRODBwdPkv4vKrq_A6mqSZ9xgusTGFO6PiP7E-r14lpFiB5_TvRbs9TSwtMLP1nPfugj18WPdOYcmHgpdSBGDYMEVugGNQRcFKbilZzOWpJ7hFgHCQVV9k1o8sSFDk7ABNszN7Y_4WEmsoUQq-X1dP8djH03HAZxfqQV_n6qdcFdJNgFWhL37tnyTETDFjRdBMAiX7GG7DLhw27fzdU3nixWyBu-y2tEk_jAYfqLthxO7Ysv39oqNzBr7Cqlm55Z7CjDSJ2ug3Ed_aGNlcnRJbmZvWKH_VENHgBcAIgALzMmxEFH_Jf8VG37foBI8Yh9UzotJCWRhFsXoXjw6L_IAFPgW5brWkyTFO0b9m7blZRAqgvY2AAAAAFrvr_1lGaMzWdih2AG6ucMx5F9jggAiAAsn_UJb0lBgHeMZT-fV8psIK-9-V57so7EmJ9GKtxuaPgAiAAteOfWRYqEQCbZSLPJzLyyYkj9p2_vfhIo_RPvBGMpMnGhhdXRoRGF0YVkBZ550fzPSZQeUxnz8DstNUIyQu-J_IEaVNYewt4rbuBcLRQAAAAAImHBYytxLgbbhMN5Q3L6WACBOZcfMVm7HOJNGetet-7RKBezefye-fG00OcAdppeOwqQBAwM5AQAgWQEA6ZK9eXSSl7N3JkeIMW703T7lBtBeCbsNKOgD9gQzv175_tkSTR9EtU03eobmCS7Vn4ZHlJP0j0TgwcHT5L-Lyq6vwOpqkmfcYLrExhTuj4j-xPq9eJaRYgef070W7PU0sLTCz9Zz37oI9fFj3TmHJh4KXUgRg2DBFboBjUEXBSm4pWczlqSe4RYBwkFVfZNaPLEhQ5OwATbMze2P-FhJrKFEKvl9XT_HYx9NxwGcX6kFf5-qnXBXSTYBVoS9-7Z8kxEwxY0XQTAIl-xhuwy4cNu383VN54sVsgbvstrRJP4wGH6i7YcTu2LL9_aKjcwa-wqpZueWewow0idroNxHfyFDAQAB",
    "authenticatorData": "nnR_M9JlB5TGfPwOy01QjJC74n8gRpU1h7C3itu4FwtFAAAAAAiYcFjK3EuBtuEw3lDcvpYAIE5lx8xWbsc4k0Z61637tEoF7N5_J758bTQ5wB2ml47CpAEDAzkBACBZAQDpkr15dJKXs3cmR4gxbvTdPuUG0F4Juw0o6AP2BDO_Xvn-2RJNH0S1TTd6huYJLtWfhkeUk_SPRODBwdPkv4vKrq_A6mqSZ9xgusTGFO6PiP7E-r14lpFiB5_TvRbs9TSwtMLP1nPfugj18WPdOYcmHgpdSBGDYMEVugGNQRcFKbilZzOWpJ7hFgHCQVV9k1o8sSFDk7ABNszN7Y_4WEmsoUQq-X1dP8djH03HAZxfqQV_n6qdcFdJNgFWhL37tnyTETDFjRdBMAiX7GG7DLhw27fzdU3nixWyBu-y2tEk_jAYfqLthxO7Ysv39oqNzBr7Cqlm55Z7CjDSJ2ug3Ed_IUMBAAE=",
    "clientDataJSON": "eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoiYzFiYjIyNzEtYzlkOC00ZmE3LTg0OTEtNTA2NGZmMDM0N2Y1Iiwib3JpZ2luIjoiaHR0cHM6Ly9pbXByb3ZlZC1zcGFjZS1wYW5jYWtlLXh4cTZxNDQ5djZodnc0NS04MDAwLmFwcC5naXRodWIuZGV2IiwiY3Jvc3NPcmlnaW4iOmZhbHNlfQ==",
    "publicKey": "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6ZK9eXSSl7N3JkeIMW703T7lBtBeCbsNKOgD9gQzv175_tkSTR9EtU03eobmCS7Vn4ZHlJP0j0TgwcHT5L-Lyq6vwOpqkmfcYLrExhTuj4j-xPq9eJaRYgef070W7PU0sLTCz9Zz37oI9fFj3TmHJh4KXUgRg2DBFboBjUEXBSm4pWczlqSe4RYBwkFVfZNaPLEhQ5OwATbMze2P-FhJrKFEKvl9XT_HYx9NxwGcX6kFf5-qnXBXSTYBVoS9-7Z8kxEwxY0XQTAIl-xhuwy4cNu383VN54sVsgbvstrRJP4wGH6i7YcTu2LL9_aKjcwa-wqpZueWewow0idroNxHfwIDAQAB",
    "publicKeyAlgorithm": -257,
    "transports": [
      "internal"
    ]
  },
  "user": {
    "name": "Arnaud",
    "id": "34cf22be-b472-4ec3-b30f-141d48d1343f"
  }
}
*/

// await server.verifyRegistration(registration, {challenge: "c1bb2271-c9d8-4fa7-8491-5064ff0347f5", origin: "https://improved-space-pancake-xxq6q449v6hvw45-8000.app.github.dev"})

/*
{
  "authenticator": {
    "aaguid": "08987058-cadc-4b81-b6e1-30de50dcbe96",
    "counter": 0,
    "icon_light": "https://webauthn.passwordless.id/authenticators/08987058-cadc-4b81-b6e1-30de50dcbe96-light.png",
    "icon_dark": "https://webauthn.passwordless.id/authenticators/08987058-cadc-4b81-b6e1-30de50dcbe96-dark.png",
    "name": "Windows Hello"
  },
  "credential": {
    "id": "TmXHzFZuxziTRnrXrfu0SgXs3n8nvnxtNDnAHaaXjsI",
    "publicKey": "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6ZK9eXSSl7N3JkeIMW703T7lBtBeCbsNKOgD9gQzv175_tkSTR9EtU03eobmCS7Vn4ZHlJP0j0TgwcHT5L-Lyq6vwOpqkmfcYLrExhTuj4j-xPq9eJaRYgef070W7PU0sLTCz9Zz37oI9fFj3TmHJh4KXUgRg2DBFboBjUEXBSm4pWczlqSe4RYBwkFVfZNaPLEhQ5OwATbMze2P-FhJrKFEKvl9XT_HYx9NxwGcX6kFf5-qnXBXSTYBVoS9-7Z8kxEwxY0XQTAIl-xhuwy4cNu383VN54sVsgbvstrRJP4wGH6i7YcTu2LL9_aKjcwa-wqpZueWewow0idroNxHfwIDAQAB",
    "algorithm": "RS256",
    "transports": [
      "internal"
    ]
  },
  "synced": false,
  "user": {
    "name": "Arnaud",
    "id": "34cf22be-b472-4ec3-b30f-141d48d1343f"
  },
  "userVerified": true
}
  */





/*
{
  "clientExtensionResults": {},
  "id": "TmXHzFZuxziTRnrXrfu0SgXs3n8nvnxtNDnAHaaXjsI",
  "rawId": "TmXHzFZuxziTRnrXrfu0SgXs3n8nvnxtNDnAHaaXjsI=",
  "type": "public-key",
  "authenticatorAttachment": null,
  "response": {
    "authenticatorData": "nnR_M9JlB5TGfPwOy01QjJC74n8gRpU1h7C3itu4FwsFAAAAAQ==",
    "clientDataJSON": "eyJ0eXBlIjoid2ViYXV0aG4uZ2V0IiwiY2hhbGxlbmdlIjoiMGE5ZmFlZTktOWRiMi00YTQ5LTk3MDUtNGNkMTlkNDE2M2IwIiwib3JpZ2luIjoiaHR0cHM6Ly9pbXByb3ZlZC1zcGFjZS1wYW5jYWtlLXh4cTZxNDQ5djZodnc0NS04MDAwLmFwcC5naXRodWIuZGV2IiwiY3Jvc3NPcmlnaW4iOmZhbHNlfQ==",
    "signature": "R96AknXLYqQEDnFsjIUC3-JGTuXXVQByFmU5UQ-evK6PNtdioeZaLq9JaUs4rKxx6eID9T61HpipuXM67VSemsOn3AHER2RZnGbhsiWUXDxl39Zt4HI8dZdRCi1Ciumr0RMJrcSonwevK0F-MhJVEnp1gRjQxpxjoqVJd8gB94B6qJk_Brk9KktdEZVv74TmVX-VKPjNgoagm4LhQmv0py0YH9MUA9wyE2sytssEegOPCyUXDvsKRyYOU6yMPInS-loN4kO2JszrCiB9HDFvD86NTW8fyfPc5sNfxmr_bIBvGEQKuk2mCFfS-XawGDU844m2oQo2nVJmoEJyNmnNRQ==",
    "userHandle": "MzRjZjIyYmUtYjQ3Mi00ZWMzLWIzMGYtMTQxZDQ4ZDEzNDNm"
  }
}
  */

/*
const credentialKey = {
    id: "TmXHzFZuxziTRnrXrfu0SgXs3n8nvnxtNDnAHaaXjsI",
    publicKey: "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6ZK9eXSSl7N3JkeIMW703T7lBtBeCbsNKOgD9gQzv175_tkSTR9EtU03eobmCS7Vn4ZHlJP0j0TgwcHT5L-Lyq6vwOpqkmfcYLrExhTuj4j-xPq9eJaRYgef070W7PU0sLTCz9Zz37oI9fFj3TmHJh4KXUgRg2DBFboBjUEXBSm4pWczlqSe4RYBwkFVfZNaPLEhQ5OwATbMze2P-FhJrKFEKvl9XT_HYx9NxwGcX6kFf5-qnXBXSTYBVoS9-7Z8kxEwxY0XQTAIl-xhuwy4cNu383VN54sVsgbvstrRJP4wGH6i7YcTu2LL9_aKjcwa-wqpZueWewow0idroNxHfwIDAQAB",
    algorithm: "RS256"
}

const expected = {
    challenge: "0a9faee9-9db2-4a49-9705-4cd19d4163b0",
    origin: "https://improved-space-pancake-xxq6q449v6hvw45-8000.app.github.dev",
    userVerified: true,
    counter: -1
}

const verified = await server.verifyAuthentication(res, credentialKey, expected)
*/

/*
{
  "credentialId": "TmXHzFZuxziTRnrXrfu0SgXs3n8nvnxtNDnAHaaXjsI",
  "userId": "MzRjZjIyYmUtYjQ3Mi00ZWMzLWIzMGYtMTQxZDQ4ZDEzNDNm",
  "counter": 1,
  "userVerified": true
}
*/